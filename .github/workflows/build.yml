name: Build and Test

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  scan:
    name: Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Detekt
        continue-on-error: true
        run: |
          chmod +x gradlew
          ./gradlew detekt

      - name: Make artifact location URIs relative
        continue-on-error: true
        run: |
          echo "$(
            jq \
              --arg github_workspace ${{ github.workspace }} \
              '. | ( .runs[].results[].locations[].physicalLocation.artifactLocation.uri |= if test($github_workspace) then .[($github_workspace | length | . + 1):] else . end )' \
              ${{ github.workspace }}/detekt.sarif.json
          )" > ${{ github.workspace }}/detekt.sarif.json

      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ github.workspace }}/detekt.sarif.json
          checkout_path: ${{ github.workspace }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [scan]
    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew stage
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/libs/diabot.jar

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          # This will use a dockerfile which copies the already-built JAR from `build/libs/`
          file: Dockerfile.nobuild
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
